import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class AdressManager {

    private static Connection connection;
    private String url = "jdbc:hsqldb:hsql://localhost/workdb";
    private String createTableAdress =
            "CREATE TABLE Adress(idAdress int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, idCity int FOREIGN KEY REFERENCES City(idCity), Street varchar(20), Number int)";

    private static PreparedStatement addAdressStmt;
    private static PreparedStatement deleteAllAdressStmt;
    private static PreparedStatement getAllAdressStmt;
    private static PreparedStatement getAdressStmt;

    private Statement statement;

    public AdressManager() {
        try {
            connection = DriverManager.getConnection(url);
            statement = connection.createStatement();

            ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
            boolean tableExists = false;
            while (rs.next()) {
                if ("Adress".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
                    tableExists = true;
                    break;

                }
            }

            if (!tableExists)
                statement.executeUpdate(createTableAdress);

            addAdressStmt = connection.prepareStatement("INSERT INTO Adress(idCity, Street, Number) VALUES (?, ?, ?)");
            deleteAllAdressStmt = connection.prepareStatement("DELETE FROM Adress");
            getAllAdressStmt = connection.prepareStatement("SELECT idAdress, idCity, Street, Number FROM Adress");

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static Connection getConnection() {
        return connection;
    }

    public static void deleteAllAdress() {
        try {
            deleteAllAdressStmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static int addAdress(Adress a) {
        int count = 0;
        try {
            addAdressStmt.setInt(1, a.getIdCity());
            addAdressStmt.setString(2, a.getStreet());
            addAdressStmt.setInt(3, a.getNumber());

            count = addAdressStmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return count;
    }

    public static List<Adress> getAllAdress() {
        List<Adress> adressList = new ArrayList<Adress>();

        try {
            ResultSet rs = getAllAdressStmt.executeQuery();

            while (rs.next()) {
                Adress adress = new Adress();
                adress.setIdCity(rs.getInt("idCity"));
                adress.setStreet(rs.getString("Street"));
                adress.setNumber(rs.getInt("Number"));
                adressList.add(adress);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return adressList;
    }

}
